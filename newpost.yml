---
- name: Gather credentials - PB1
  hosts: all
  gather_facts: false
# prerequisites = have a collections folder in your repo
# with requirements.yml in it with the following:
#---
#collections:
#- pge_util.papm_util
##
  tasks:
# 
# task needed for credentials in playbookone.yml
#
  - name: Include task list in play - import - task 1
    ansible.builtin.import_tasks:
      # make sure to have playbookone in your repo 
      file: playbookone.yml

- name: PB2
  hosts: all
  gather_facts: true

  tasks:

  - name: Create a directory 1
    ansible.windows.win_file:
        path: C:\installs\post
        state: directory
  
  - name: Copy a folder from GIT
    ansible.windows.win_copy:
      src: payload/
      dest: C:\installs\post\

  - name: Create a directory 2
    ansible.windows.win_file:
        path: C:\installs\fromshare
        state: directory
  
  - name: Create a directory 1
    ansible.windows.win_file:
        path: C:\installs\postOXTG
        state: directory

  - name: copy a file from server ITMDT03
    win_copy:
      src: \\ITMDT03\post\
      dest: C:\installs\fromshare\
      remote_src: true
    vars:
      ansible_become: yes
      ansible_become_method: runas
      ansible_become_user: '{{ ansible_user }}'
      ansible_become_pass: '{{ ansible_password }}'
      ansible_become_flags: logon_type=new_credentials logon_flags=netcredentials_only
    register: copyshare_output03

# A - Sweent 32 registry fix
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" /v Enabled /d 0 /t REG_DWORD /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" /v DisabledByDefault /d 1 /t REG_DWORD /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" /v Enabled /d 0 /t REG_DWORD /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" /v DisabledByDefault /d 1 /t REG_DWORD /f
  - name: 4. A- sweet 32 registry fix (A.0)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168
      name: Enabled
      data: 0
      type: dword
      state: present

  - name: 4. A- sweet 32 registry fix (A.1)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168
      name: DisabledByDefault
      data: 1
      type: dword
      state: present

  - name: 4. A- sweet 32 registry fix (A.2)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168
      name: Enabled
      data: 0
      type: dword
      state: present

  - name: 4. A- sweet 32 registry fix (A.3)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168
      name: DisabledByDefault
      data: 1
      type: dword
      state: present


# B - Disabling TLS1.0 reg
#[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server]
#"DisabledByDefault"=dword:00000000
#"Enabled"=dword:00000000
#[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client]
#"Enabled"=dword:00000000
#"DisabledByDefault"=dword:00000001
  - name: B -  Disabling TLS 1.0win (B.0)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server
      name: DisabledByDefault
      data: 0
      type: dword
      state: present

  - name: B -  Disabling TLS 1.0win (B.1)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\S\Client
      name: DisabledByDefault
      data: 1
      type: dword
      state: present

# c - insecure windows service - run script
  - name: C - insecure-text
    ansible.windows.win_powershell:
      script: |
        echo "insecure windows service - work in progress run script"

# c2 insecure windows service - run script
  - name: c2 - insecure
    win_shell: 'C:\installs\post\insecurewindowsservice.ps1'
    vars:
      ansible_become: yes
      ansible_become_method: runas
      ansible_become_user: '{{ ansible_user }}'
      ansible_become_pass: '{{ ansible_password }}'
      ansible_become_flags: logon_type=new_credentials logon_flags=netcredentials_only
    register: uinsecure

# D - MSDT_Vulnerability
# reg delete HKEY_CLASSES_ROOT\ms-msdt /f

  - name: D - MSDT_Vulnerability 
    ansible.windows.win_regedit:
      path: HKCR:\ms-msdt
      state: absent

# E - Speculative Execution
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverride /t REG_DWORD /d 72 /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverrideMask /t REG_DWORD /d 3 /f
  - name: E - Speculative Execution (E.0)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management
      name: FeatureSettingsOverride
      data: 72
      type: dword
      state: present

  - name: E - Speculative Execution (E.1)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management
      name: FeatureSettingsOverrideMask
      data: 3
      type: dword
      state: present

# F - Unquoted - text
  - name: F -  Unquoted - text
    ansible.windows.win_powershell:
      script: |
        echo "F - Unquoted - work in progress run script"

# F2 - Unquoted
  - name: F2 - Unquoted
    win_shell: 'C:\installs\post\unquoted.ps1'
    vars:
      ansible_become: yes
      ansible_become_method: runas
      ansible_become_user: '{{ ansible_user }}'
      ansible_become_pass: '{{ ansible_password }}'
      ansible_become_flags: logon_type=new_credentials logon_flags=netcredentials_only
    register: unquoted

# G - winrmpost-text
  - name: G - winrmpost-text
    ansible.windows.win_powershell:
      script: |
        echo "G - WinRMPost - work in progress run script"

# G2 - Winrmpost
  - name: G2 - winrmpost
    win_powershell: 'C:\installs\post\winrmpost.ps1'
    vars:
      ansible_become: yes
      ansible_become_method: runas
      ansible_become_user: '{{ ansible_user }}'
      ansible_become_pass: '{{ ansible_password }}'
      ansible_become_flags: logon_type=new_credentials logon_flags=netcredentials_only
    register: winrmpost

# H - WinVerify Trust Signature Validation
# reg add "HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config" /v EnableCertPaddingCheck /t REG_DWORD /d 1 /f

  - name: H - WinVerify Trust Signature Validation (H.0)
    ansible.windows.win_regedit:
      path: HKLM:\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config
      name: EnableCertPaddingCheck
      data: 1
      type: dword
      state: present
    register: winverifytrust

