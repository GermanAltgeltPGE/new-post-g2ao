---
- name: Gather credentials - PB1
  hosts: all
  gather_facts: false
# prerequisites = have a collections folder in your repo
# with requirements.yml in it with the following:
#---
#collections:
#- pge_util.papm_util
##
  tasks:
# 
# task needed for credentials in playbookone.yml
#
  - name: Include task list in play - import - task 1
    ansible.builtin.import_tasks:
      # make sure to have playbookone in your repo 
      file: playbookone.yml

- name: PB2
  hosts: all
  gather_facts: true

  tasks:

  - name: Create a directory 1
    ansible.windows.win_file:
        path: C:\installs\post
        state: directory
  
  - name: Copy a folder from GIT
    ansible.windows.win_copy:
      src: payload/
      dest: C:\installs\post\

  - name: Create a directory 2
    ansible.windows.win_file:
        path: C:\installs\fromshare
        state: directory

  - name: Copy a folder from network share
    ansible.windows.win_copy:
      src: z:\
      dest: C:\installs\fromshare\
    register: copyshare_output
  - debug: var=copyshare_output

  #- name: starting postdeployment verification  - Copy a folder from network
  #  ansible.windows.win_copy:
  #    src: \\winteldev18\post\  
  #    dest: C:\installs\fromserver
  #    remote_src: true

# Sweent 32 registry fix
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" /v Enabled /d 0 /t REG_DWORD /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" /v DisabledByDefault /d 1 /t REG_DWORD /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" /v Enabled /d 0 /t REG_DWORD /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" /v DisabledByDefault /d 1 /t REG_DWORD /f
  - name: 4. A- sweet 32 registry fix (A.0)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168
      name: Enabled
      data: 0
      type: dword
      state: present

  - name: 4. A- sweet 32 registry fix (A.1)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168
      name: DisabledByDefault
      data: 1
      type: dword
      state: present

  - name: 4. A- sweet 32 registry fix (A.2)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168
      name: Enabled
      data: 0
      type: dword
      state: present

  - name: 4. A- sweet 32 registry fix (A.3)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168
      name: DisabledByDefault
      data: 1
      type: dword
      state: present


#Disabling TLS1.0 reg
#[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server]
#"DisabledByDefault"=dword:00000000
#"Enabled"=dword:00000000
#[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Client]
#"Enabled"=dword:00000000
#"DisabledByDefault"=dword:00000001
  - name: B -  Disabling TLS 1.0win (B.0)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server
      name: DisabledByDefault
      data: 0
      type: dword
      state: present

  - name: B -  Disabling TLS 1.0win (B.1)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\S\Client
      name: DisabledByDefault
      data: 1
      type: dword
      state: present

# c - insecure windows service - run script
  - name: Unquoted
    ansible.windows.win_powershell:
      script: |
        echo "insecure windows service - work in progress run script"

# D - MSDT_Vulnerability
# reg delete HKEY_CLASSES_ROOT\ms-msdt /f

  - name: D - MSDT_Vulnerability 
    ansible.windows.win_regedit:
      path: HKCR:\ms-msdt
      state: absent

# E - Speculative Execution
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverride /t REG_DWORD /d 72 /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverrideMask /t REG_DWORD /d 3 /f
  - name: E - Speculative Execution (E.0)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management
      name: FeatureSettingsOverride
      data: 72
      type: dword
      state: present

  - name: E - Speculative Execution (E.1)
    ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management
      name: FeatureSettingsOverrideMask
      data: 3
      type: dword
      state: present

# F - Unquoted - run script
  - name: Unquoted
    ansible.windows.win_powershell:
      script: |
        echo "Unquoted - work in progress run script"
# G - winrmpost - https enable winrm
  - name: WINRMPOST - enable winrm
    ansible.windows.win_powershell:
      script: |
        echo "Winrmpost - work in progress run script"
        # Removes existing HTTPS listeners (some builds have broken existing listeners)
        #Get-ChildItem -Path WSMan:\localhost\listener | Where-Object { $_.Keys -Contains "transport=HTTPS" } | Remove-Item -Recurse -Force
        # Create new HTTPS listener with appropriate cert
        #winrm quickconfig -transport:HTTPS -quiet

# H - WinVerify Trust Signature Validation
# reg add "HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config" /v EnableCertPaddingCheck /t REG_DWORD /d 1 /f

  - name: H - WinVerify Trust Signature Validation (H.0)
    ansible.windows.win_regedit:
      path: HKLM:\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config
      name: EnableCertPaddingCheck
      data: 1
      type: dword
      state: present

