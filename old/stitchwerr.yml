---
- name: Gather creds- PB1
  hosts: all
  gather_facts: false
# prerequisites = have a collections folder in your repo
# with requirements.yml in it with the following:
#---
#collections:
# - pge_util.papm_util
#
  tasks:
# 
# task needed for credentials in playbookone.yml
#
  - name: Creds - task1 - PB1 
    ansible.builtin.import_tasks:
      # make sure to have playbookeone in your repo 
      file: playbookone.yml
#
# Separate playbook with ansible facts
#    
# Change the following lines with your playbook
#
- name:  stitch - task1 - PB2 
  hosts: all 
  no_log: false
  ignore_errors: true

  vars:
    Today: "{{ lookup('pipe', 'date +\"%Y%m%d\"') }}"
    OutPath2: "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-new.txt"
    Path0: "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-step00.txt"
    Path1: "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-g2ao.txt"
    Path2: "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-cxya.txt"
    Path3: "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-oxtg.txt"
    files:
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-step00.txt"
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-g2ao.txt"
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-cxya.txt"
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-oxtg.txt"
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-notexists.txt"
      
  tasks:
  - name: Create output file
      win_copy:
      content: |
        #### Header ####
        hostname = {{ ansible_hostname | upper}}
        #### header ####
    dest: "{{ Path0 }}" 

  - name: Check if file exists
    win_stat:
      path: "{{ item }}"
    with_items: "{{ files }}"  
    register: check_file_name

  - name: Verifying if file exists
    debug:
      msg: "The file {{ item.item }} exists"
    with_items: "{{ check_file_name.results }}"
    when: item.stat.exists

  - name: Verifying if file missing
    debug:
      msg: "The file {{ item.item }} missing"
    with_items: "{{ check_file_name.results }}"
    when: not item.stat.exists