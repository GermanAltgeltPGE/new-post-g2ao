---
- name: Gather credentials - PB1
  hosts: all
  gather_facts: false
# prerequisites = have a collections folder in your repo
# with requirements.yml in it with the following:
#---
#collections:
#- pge_util.papm_util
##
  tasks:
# 
# task needed for credentials in playbookone.yml
#
  - name: Include task list in play - import - task 1
    ansible.builtin.import_tasks:
      # make sure to have playbookone in your repo 
      file: playbookone.yml

- name: PB2
  hosts: all
  gather_facts: true
  ignore_errors: true
  vars:
    disablesvcs: "['WinHttpAutoProxySvc','spooler','UmRdpService','TapiSrv','snmptrap','msiscsi']"
# registry changes
#enableLUA    
#set-itemproperty -path HKLM:\SOFTWARE\Microsoft\sqmclient\windows -Name CEIPEnable -Value 0
#New-ItemProperty -Path "HKLM:\Software\microsoft\windows NT\currentversion\Softwareprotectionplatform" -Name KeyManagementServiceName  -PropertyType string -Value 
    regvals:
      - {path: 'HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System', name: 'EnableLua', value: '0', atatype: 'dword'}
      - {path: 'HKLM\SOFTWARE\Microsoft\sqmclient\windows', name: 'CEIPEnable', value: '0', atatype: 'dword'} #osconfig2012.ps1
      - {path: 'HKLM\Software\microsoft\windows NT\currentversion\Softwareprotectionplatform', name: 'KeyManagementServiceName', value: 'PRITINFGENWC001', atatype: 'STRING'} #osconfig2012.ps1



  tasks:
    # create admin and installs directories
    - name: Create directory structure
      win_file:
        path: "{{ item.path }}"
        state: directory
      loop: 
        - path: 'c:\admin'
        - path: 'd:\installs'  
        - path: 'd:\temp\g2ao\temp'

    - name: copy folders from server ITMDT03
      win_copy:
        src: \\ITMDT03\GermanA\Vanilla
        dest: D:\installs\Vanilla
        remote_src: true
      vars:
        ansible_become: yes
        ansible_become_method: runas
        ansible_become_user: '{{ ansible_user }}'
        ansible_become_pass: '{{ ansible_password }}'
        ansible_become_flags: logon_type=new_credentials logon_flags=netcredentials_only
      register: copyshare_output03sw
        
    - name: rename computer
      debug: 
        msg: rename computer

    - name: Set Static IP
      debug: 
        msg: Set Static IP

    - name: Add to Domain
      debug: 
        msg: Add to Domain

    - name: Change CDROM/DVD to I
      debug: 
        msg: Change CDROM/DVD to I

# chimney and rss settiungs (netsh int tcp show global)
# chimney deprecated? https://learn.microsoft.com/en-us/windows-server/networking/technologies/network-subsystem/net-sub-performance-tuning-nics
# Do not use the offload features IPsec Task Offload or TCP Chimney Offload. These technologies are deprecated in Windows Server 2016, and might adversely affect server and networking performance. In addition, these technologies might not be supported by Microsoft in the future.
#    - name: Disable chimney
#      ansible.windows.win_command:
#        cmd: netsh int tcp set global chimney=disabled
#      register: netshchimney
#
    - name: Disable RSS
      ansible.windows.win_command:
        cmd: netsh int tcp set global rss=disabled
      register: netshRSS
      become: yes
      become_user: Administrator

    - name: install SCOM
      debug: 
        msg: install SCOM
    
    # DELL Related software
    - name: Only Dell BLOCK
      when: ansible_system_vendor == "Dell Inc."
      block:
        - name: Install Dell Openmanage 9.4 CAS0005E,Dell OpenManage
          debug: 
            msg: Install Dell Openmanage 9.4 CAS0005E,Dell OpenManage
          register: DELL1
        - name: Install HDLM 8.0 CAS0005D,Emulex and HDLM
          debug: 
            msg: Install HDLM 8.0 CAS0005D,Emulex and HDLM
        - name: Install HDLM 8.0 CAS0005D,Emulex and HDLM
          debug: 
            msg: Install HDLM 8.0 CAS0005D,Emulex and HDLM
          register: DELL2
        - name: Install Emulex One Command CAS0005D,Emulex and HDLM
          debug: 
            msg: Install Emulex One Command CAS0005D,Emulex and HDLM
          register: DELL3
        - name: Install Mainboard Controller CAS002FC,SEL 3355
          debug: 
            msg: Install Mainboard Controller CAS002FC,SEL 3355
          register: DELL4
        - name:  Install SysMon Install 1 - does not exist
          debug: 
            msg:  Install SysMon Install 1 - does not exist
          register: DELL5

        - name:  Install SysMon Install 2
          debug: 
            msg:  Install SysMon Install 2
          register: DELL6
        
        - name:  Install SysMon Install 3
          debug: 
            msg:  Install SysMon Install 3
          register: DELL7
      rescue:
        - name: rescue
          debug: 
            msg: "If error"      
    # end of DELL software

    # managed settings - user  rights
    - name: Assign User rights
      debug: 
        msg: Assign User rights

    # modify registry entries
    - name: modify registry entries
      ansible.windows.win_regedit:
        path: "{{ item.path }}"
        name: "{{ item.name }}"
        data: "{{ item.value }}"
        type: "{{ item.datatype }}"
      loop: '{{ regvals }}'
        
    # the bottom does not run unless the shadow storage is created
    # run vssadmin.exe resize shadowstorage /on=C: /For=C: /Maxsize=5GB
    
    - name: Stop and disable Services
      ansible.windows.win_service:
        name: '{{ item }}'
        state: stopped
        start_mode: disabled
      loop: '{{ disablesvcs }}'

   # install applications on all servers 
    - name: Elastic endgame 3.60.3
      debug: 
        msg: Elastic endgame 3.60.3
    - name: Tenable Nessus Agent
      debug: 
        msg: Tenable Nessus Agent
    - name: FlexNet Inventory Agent
      debug: 
        msg: FlexNet Inventory Agent
    - name: Tripwire Axion Agent - IF NERC
      debug: 
        msg: Tripwire Axion Agent - IF NERC
    - name: SCOM 2019 Agent UR3
      debug: 
        msg: SCOM 2019 Agent UR3        