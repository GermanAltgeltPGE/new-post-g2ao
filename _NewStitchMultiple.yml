---
- name: Gather credentials - PB1
  hosts: all
  gather_facts: false
# prerequisites = have a collections folder in your repo
# with requirements.yml in it with the following:
#---
#collections:
# - pge_util.papm_util
#
  tasks:
# 
# task needed for credentials in playbookone.yml
#
  - name: Include task list in play - import - task 1
    ansible.builtin.import_tasks:
      # make sure to have playbookeone in your repo 
      file: playbookone.yml
#
# Separate playbook with ansible facts
#    
# Change the following lines with your playbook
#
- name:  post install g2ao - PB2 
  hosts: all 
  no_log: false
  vars:
    Drive: "c:\\temp"
    Today: "{{ lookup('pipe', 'date +\"%Y%m%d\"') }}"
    Outfile: "{{Drive}}\\{{ansible_hostname | upper}}_{{ Today }}.txt"
    
    files:
      - "{{Drive}}\\{{ansible_hostname | upper}}_{{ Today }}-xxxx.txt"
      - "{{Drive}}\\{{ansible_hostname | upper}}_{{ Today }}-g2ao.txt"
      - "{{Drive}}\\{{ansible_hostname | upper}}_{{ Today }}-cxya.txt"
      - "{{Drive}}\\{{ansible_hostname | upper}}_{{ Today }}-oxtg.txt"
      - "{{Drive}}\\{{ansible_hostname | upper}}_{{ Today }}-notexists.txt"
  tasks:
    - name: check if dir exists
      win_stat:
        path: "d:\\"
      register: disthere
    
    - name: change Drive if D is there is false
      set_fact:
        Drive: "D:\\Installs"
      when: disthere.stat.exists
  # Prep - remove file and create 
    - name: Info on {{ Outfile }} win_stat
      win_stat:
        path: "{{ Outfile }}"
      register: win_stat_result
  
    - name: Delete file if EXISTS
      win_file:
        path: "{{ Outfile }}"
        state: absent
      when: win_stat_result.stat.exists

    - name: Create header for file with ansible hostname
      ansible.windows.win_copy:
        content: | 
          ##### Header
          Hostname: {{ ansible_hostname | upper }}
          ##### Header
        dest: "{{ Outfile }}"

## Stitch with files if they exist
 
    - name: append files 
      include: _append.yml some_var={{item}}
      with_items: "{{ files }}"


### remove # and empty lines on output file

    - name: cleanup final file = remove blank lines
      win_lineinfile:
        dest: "{{ Outfile }}" 
        state: absent 
        regexp: {{ item }}
        with_items:
          - "^\\s*$"
          - "^#"
