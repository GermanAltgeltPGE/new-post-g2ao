---
- name: Gather credentials - PB1
  hosts: all
  gather_facts: false
# prerequisites = have a collections folder in your repo
# with requirements.yml in it with the following:
#---
#collections:
# - pge_util.papm_util
#
  tasks:
# 
# task needed for credentials in playbookone.yml
#
  - name: Include task list in play - import - task 1
    ansible.builtin.import_tasks:
      # make sure to have playbookeone in your repo 
      file: playbookone.yml
#
# Separate playbook with ansible facts
#    
# Change the following lines with your playbook
#
- name:  post install g2ao - PB2 
  hosts: all 
  no_log: false
  vars:
    Today: "{{ lookup('pipe', 'date +\"%Y%m%d\"') }}"
    Outfile: "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-new.txt"
    files:
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-g2ao.txt"
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-cxya.txt"
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-oxtg.txt"
      - "d:\\installs\\{{ansible_hostname | upper}}_{{ Today }}-notexists.txt"
  tasks:
  # Prep - remove file and create 
  - name: Info on {{ Outfile }} win_stat
    win_stat:
      path: "{{ Outfile }}"
    register: win_stat_result
  
  - name: Delete file if EXISTS
    win_file:
      path: "{{ Outfile }}"
      state: absent
    when: win_stat_result.stat.exists

  - name: Create header for file with ansible hostname
    ansible.windows.win_copy:
      content: | 
        ##### Header
        Hostname: {{ ansible_hostname | upper }}
        ##### Header
      dest: "{{ Outfile }}"

## Stitch with files if they exist
  - name: check if file exists
    win_stat:
      path: "{{ item }}"
    with_items: "{{ files }}"
    register: check_file_name

  - name: Verifying if file missing
    debug: 
      msg: "File {{ item.item }} missing"
    with_items: "{{ check_file_name.results }}"
    when: not item.stat.exists

  - name: Verifying if file exists
    debug: 
      msg: "File {{ item.item }} exists"
    with_items: "{{ check_file_name.results }}"
    when: item.stat.exists

  - name: files
    include: _append.yml
    with: "{{ files }}"          
   