---
- name: Gather credentials - PB1
  hosts: all
  gather_facts: false
# prerequisites = have a collections folder in your repo
# with requirements.yml in it with the following:
#---
#collections:
#- pge_util.papm_util
##
  tasks:
# 
# task needed for credentials in playbookone.yml
#
  - name: Include task list in play - import - task 1
    ansible.builtin.import_tasks:
      # make sure to have playbookone in your repo 
      file: playbookone.yml

- name: PB2
  hosts: all
  gather_facts: true
  tasks:


  - name: Create a directory 1
    ansible.windows.win_file:
        path: C:\installs\output
        state: directory

####
# Sweet 32 registry fix
# "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" /v Enabled /d 0 /t REG_DWORD /f
# "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168" /v DisabledByDefault /d 1 /t REG_DWORD /f
# "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" /v Enabled /d 0 /t REG_DWORD /f
# "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168" /v DisabledByDefault /d 1 /t REG_DWORD /f
####  

  - name: Sweet32 reg 1
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168
      name: Enabled
    register: SW1

  - name: Sweet32 reg 2
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168
      name: DisabledByDefault
    register: SW2

  - name: Sweet32 reg 3
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168
      name: Enabled
    register: SW3

  - name: Sweet32 reg 4
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Ciphers\Triple DES 168/168
      name: DisabledByDefault
    register: SW4

  - name: Define SW32 Conditional Variable
    set_fact:
       SW32: "Fail"
       
  - name: Define SW32 Conditional Variable
    set_fact:
       SW32: "pass"
    when: SW1.value == 0

  #### tls
  #Disabling TLS1.0 reg

  - name: Disabling TLS1.0 reg 1
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\Server
      name: DisabledByDefault
    register: TLSServer

  - name: Disabling TLS1.0 reg 2
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.0\S\Client
      name: DisabledByDefault
    register: TLSClient

  - name: Define TLS Variable
    set_fact:
       TLS: "Fail"

  - name: Define TLS Conditional Variable
    set_fact:
       TLS: "Pass"
    when: TLSServer.value == 0 and TLSClient.value == 1

# D - MSDT_Vulnerability
# reg delete HKEY_CLASSES_ROOT\ms-msdt /f
  - name: Define MSDT Variable
    set_fact:
       MSDT: "Pass"

  - name: Check if MSDT registry key exists
    win_reg_stat:
      path: HKCR:\ms-msdt
    register: reg_key_status

  - name: Fail if MSDT registry key is present
    fail:
      MSDT: "Fail"
    when: reg_key_status.exists


# E - Speculative Execution
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverride /t REG_DWORD /d 72 /f
# reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v FeatureSettingsOverrideMask /t REG_DWORD /d 3 /f
 
  - name: Define Speculative execution variable
    set_fact:
       SPEX: "Fail"
  
  - name: Speculative execution reg 1
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management
      name: FeatureSettingsOverride
    register: SPEX1

  - name: Speculative execution reg 2
    ansible.windows.win_reg_stat:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management
      name: FeatureSettingsOverrideMask 
    register: SPEX2

  - name: Speculative execution variable conditional
    set_fact:
       SPEX: "Pass"
    when: SPEX1.value == 72 and SPEX2.value == 3
#    
# F - Unquoted - run script
#
  - name: Unquoted
    set_fact:
      UNQ: "Unknown"
#
# G - winrmpost - https enable winrm
#
  - name: Winrm
    set_fact:
      WRM: "Unknown"

#
# H - winverifytrust
# reg add "HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config" /v EnableCertPaddingCheck /t REG_DWORD /d 1 /f
#
  - name: WVT
    set_fact:
      WVT: "Fail"

  - name: winverifytrust reg 
    ansible.windows.win_reg_stat:
      path: HKLM:\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config
      name: EnableCertPaddingCheck
    register: WVFT

  - name: WVT
    set_fact:
      WVT: "Pass"
    when: WVFT.value == 1

  - name: Remote Desktop Users membership
    ansible.windows.win_group_membership:
      name: Remote Desktop Users
      members:
      state: absent
    register: RDU

  - name: Administrators Membership
    ansible.windows.win_group_membership:
      name: Administrators
      members:
      state: absent
    register: Admins

########################
#     Output file
########################

  - name: "Ansible | Creating a file with content 1"
    win_copy:
     dest: C:\installs\output\log.txt
     content: |
       {{ ansible_hostname }} POST VALIDATION REPORT
       OS Name and architecture: {{ ansible_os_name }} {{ ansible_architecture2 }}
       IP Addresses: {{ ansible_ip_addresses }}
       Vendor: {{ ansible_system_vendor }}
       4.A - Sweet32 ...................... {{ SW32 }}
       4.B - Disabling TLS 1.0 (B.0) ...... {{ TLS }}
       4.C InsecureWindowsService ............ run script located in installs\post
       4.D MSDT ...........................{{ MSDT }}
       4.E Speculative Execution...........{{ SPEX }}
       4.F Unquoted .......................... run script located in installs\post
       4.G winRM ............................. run script located in installs\post
       4.H WinVerify trust ................{{ WVT }}
       5. Validate Processor and RAM against SDP Spreadsheet 
       6. Members of Administrators and Remote Desktop Users
       --------
          Local Server Administrators
          {{Admins.members}}
       --------
          Local Server Remote Desktop Users
          {{RDU.members}}
       --------
       
